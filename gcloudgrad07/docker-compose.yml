version: '3'

networks:
  app:
    driver: bridge

services:
  zookeeper:
    container_name: gcloudgrad07-zookeeper
    image: confluentinc/cp-zookeeper:7.3.0
    networks:
      - app
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    container_name: gcloudgrad07-broker
    image: confluentinc/cp-kafka:7.3.0
    networks:
      - app
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: gcloudgrad07-control-center
    depends_on:
      - broker
      - zookeeper
    ports:
      - "7057:9021"
    networks:
      - app
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'broker:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 2
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
  
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    container_name: gcloudgrad07-schema-registry
    depends_on:
      - zookeeper
      - broker
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'

  web:
    build: .
    container_name: gcloudgrad07-web
    networks:
      - app
    ports:
      - "5057:5000"
    depends_on:
      - broker
      - db
      - control-center

  db:
    image: postgres
    container_name: gcloudgrad07-db
    networks:
      - app
    environment:
      POSTGRES_DB: robotremote
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./setup/database/:/docker-entrypoint-initdb.d

  kafka-to-mqtt:
    image: python:3.8-slim
    container_name: gcloudgrad07-kafka_mqtt_conv
    networks:
      - app
    volumes:
      - ./scripts/kafka_to_mqtt.py:/kafka_to_mqtt.py
      - ./requirements.txt:/requirements.txt
    depends_on:
      - broker
      - zookeeper
      - mqtt-broker
      - web
    command: sh -c "pip install --no-cache-dir -r /requirements.txt && python /kafka_to_mqtt.py"
  
  mqtt-broker:
    image: eclipse-mosquitto:latest
    container_name: gcloudgrad07-mqtt-broker
    networks:
      - app
    ports:
      - "6057:1883"
    volumes:
      - ./conf:/mosquitto/config

volumes:
  postgres_data:
